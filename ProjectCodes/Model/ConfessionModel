from datetime import datetime


class ConfessionModel:
    """
    Represents a confession model for storing confession data.

    Attributes:
        user_id (str): The ID of the user who created the confession.
        category_id (str): The ID of the category the confession belongs to.
        text (str): The text of the confession.
        is_public (bool): Whether the confession is public or not.
        created_at (datetime): The timestamp when the confession was created.
    """

    def __init__(self, user_id: str, category_id: str, text: str, is_public: bool, created_at: datetime = None):
        """
        Initializes the ConfessionModel with the provided attributes.

        Args:
            user_id (str): The ID of the user who created the confession.
            category_id (str): The ID of the category the confession belongs to.
            text (str): The text of the confession.
            is_public (bool): Whether the confession is public or not.
            created_at (datetime, optional): The creation timestamp. Defaults to current UTC time.
        """
        self.user_id = user_id
        self.category_id = category_id
        self.text = text
        self.is_public = is_public
        self.created_at = created_at or datetime.utcnow()

    def to_dict(self):
        """
        Converts the ConfessionModel instance into a dictionary for database storage.

        Returns:
            dict: A dictionary representation of the confession model.
                  Example:
                  {
                      "user_id": "67631ac3bc0ebff7bd86f15e",
                      "category_id": "6767063e845a9b89b2f1ee16",
                      "text": "This is a confession text",
                      "is_public": True,
                      "created_at": "<timestamp>"
                  }
        """
        return {
            "user_id": self.user_id,
            "category_id": self.category_id,
            "text": self.text,
            "is_public": self.is_public,
            "created_at": self.created_at
        }

    @classmethod
    def from_dict(cls, data: dict):
        """
        Creates a ConfessionModel instance from a dictionary.

        Args:
            data (dict): A dictionary containing confession data.

        Returns:
            ConfessionModel: An instance of the model.
        """
        return cls(
            user_id=data["user_id"],
            category_id=data["category_id"],
            text=data["text"],
            is_public=data["is_public"],
            created_at=data.get("created_at", datetime.utcnow())
        )